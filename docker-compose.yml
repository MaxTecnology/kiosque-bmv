services:
  # Aplicação PHP-FPM
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        user: laravel
        uid: 1000
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  # Nginx Web Server
  webserver:
    image: nginx:alpine
    container_name: laravel_webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d
    networks:
      - laravel
    depends_on:
      - app

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: laravel_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: hungerz
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: laravel
      MYSQL_USER: laravel
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        user: laravel
        uid: 1000
    container_name: hungerz_queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    command: sh -c "sleep 60 && php artisan queue:work --verbose --tries=3 --timeout=90 --sleep=3 --max-jobs=1000"
    networks:
      - laravel
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      app:
        condition: service_started

  # MailHog para teste de emails
  mailhog:
    image: mailhog/mailhog
    container_name: hungerz_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - laravel

  # PHPMyAdmin (Opcional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    networks:
      - laravel
    depends_on:
      - db

# Docker Networks
networks:
  laravel:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local